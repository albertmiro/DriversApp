apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.1"
    defaultConfig {
        applicationId "com.albertmiro.driversapp"
        minSdkVersion 22
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField 'String', 'BUILD_DATE', '"' + new Date().format('yyyy-MM-dd') + '"'
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    buildTypes {
        debug {
            resValue "string", "google_maps_api_key", getMapsApiKey()
        }

        release {
            resValue "string", "google_maps_api_key", getMapsApiKey()

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':domain')
    implementation project(':data')
    implementation project(':common')
    Buckets.baseAndroid.forEach { add(it.first, it.second) }
    Buckets.koin.forEach { add(it.first, it.second) }
    Buckets.anko.forEach { add(it.first, it.second) }
    Buckets.appLibraries.forEach { add(it.first, it.second) }
    Buckets.rxJava.forEach { add(it.first, it.second) }
    Buckets.network.forEach { add(it.first, it.second) }
    Buckets.testing.forEach { add(it.first, it.second) }
}


/*
* This method is used to retrieve the Google Maps API Key from a project.properties file,
* it should contain a google_maps_api_key field on it with the key. In this way if you want
* to publish this project on a public server, just with not pushing the project.properties file
* you API Key will be secure.
*/

def getMapsApiKey() {
    Properties properties = new Properties()
    properties.load(new File(rootDir.absolutePath + "/project.properties").newDataInputStream())
    def mapsApiKey = properties.getProperty('google_maps_api_key', null)
    if (mapsApiKey == null) {
        throw new GradleException(
                "Google Maps API Key is missing. Please go to your project.properties file and define a google_maps_api_key," +
                        " you can create a new one at this site: https://developers.google.com/maps/android/")
    }
    return mapsApiKey
}
